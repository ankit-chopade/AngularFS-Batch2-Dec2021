Merge  Vs  Rebase
~~~~~~~~~~~~~~~

git  merge  dev master
git  rebase  dev master
--------------------------------------------------------------------------------------

[ Merge Demo ]

1.  Create a separate folder (as working directory) for this task.


git init

touch m1.txt
git add -A
git commit -m "m1.txt  file is added under master branch"

touch m2.txt
git add -A
git commit -m "m2.txt  file is added under master branch"

git checkout -b dev

touch d1.txt
git add -A
git commit -m "d1.txt  file is added under dev branch"

touch d2.txt
git add -A
git commit -m "d2.txt  file is added under dev branch"
git log

git checkout master
git log
git merge dev master
git log


-------------------------------------------
[Rebase Demo]

1.  Create a separate folder (as working directory) for this task.


git init

touch m1.txt
git add -A
git commit -m "m1.txt  file is added under master branch"

touch m2.txt
git add -A
git commit -m "m2.txt  file is added under master branch"

git checkout -b dev

touch d1.txt
git add -A
git commit -m "d1.txt  file is added under dev branch"

touch d2.txt
git add -A
git commit -m "d2.txt  file is added under dev branch"
git log

git checkout master
git log
git rebase dev master
git log

-----------------------------------------------------------------------------------------------------

Ignore Files
~~~~~~~~~~~~


A gitignore file specifies intentionally untracked files that Git should ignore. 


GitIgnore Files :
	https://github.com/github/gitignore



Rules
~~~~~
# ignore all .a files
*.a

# but do track lib.a, even though you're ignoring .a files above
!lib.a

# only ignore the TODO file in the current directory, not subdir/TODO
/TODO

# ignore all files in any directory named build
build/

# ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt

# ignore all .pdf files in the doc/ directory and any of its subdirectories
doc/**/*.pdf
